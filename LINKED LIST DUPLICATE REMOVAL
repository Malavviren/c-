#include<stdio.h>
#include<iostream>
#include<malloc.h>
#include<deque>
using namespace std;
struct node
{
    int data;
    struct node* next;
};
void removeDuplicates(struct node* head)
{
  struct node* current = head;
  struct node* next_next;
  if(current == NULL)
     return;

  while(current->next != NULL)
  {
    if(current->data == current->next->data)
    {
      next_next = current->next->next;
      free(current->next);
      current->next = next_next;
    }
    else
    {
      current = current->next;
    }
  }
}
void push(struct node** head_ref, int new_data)
{
    struct node* new_node = (struct node*) malloc(sizeof(struct node));
    new_node->data  = new_data;
    new_node->next = (*head_ref);
    (*head_ref)    = new_node;
}
void printList(struct node *node)
{
  while(node!=NULL)
  {
   printf("%d ", node->data);
   node = node->next;
  }
}
int main()
{
    int arr[100001];
    int n;
    deque<int>v;
  struct node* head = NULL;
   cin>>n;
  for(int i=0;i<n;i++)
  {
  cin>> arr[i];
  v.push_front(arr[i]);

  }
  for(int j=0;j<n;j++)
  {
      push(&head, v[j]);

  }
  cout<<endl;

  cout<<"before"<<endl;
  printList(head);

cout<<endl<<endl;
  removeDuplicates(head);
cout<<"after"<<endl;
  printList(head);

  getchar();
}
